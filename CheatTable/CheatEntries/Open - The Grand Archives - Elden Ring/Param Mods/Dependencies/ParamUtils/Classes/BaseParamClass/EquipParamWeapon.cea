[ENABLE]
{$lua}
--if syntaxcheck then return end

--[[START EquipParamWeapon class]]--
EquipParamWeapon = BaseParamClass:new()

function EquipParamWeapon:new(uuid, id, address)
	local o = {}
	self.__index = self
	setmetatable(o, self)

	o:init("EquipParamWeapon", uuid, id, address)
	return o
end

function EquipParamWeapon:behaviorVariationId(value)
    self:patch4Byte(0x4, value)
end

function EquipParamWeapon:wanderingEquipId(value)
    self:patch4Byte(0xC, value)
end

function EquipParamWeapon:weaponWeightRate(value)
    self:patchFloat(0x14, value)
end

function EquipParamWeapon:basicPrice(value)
    self:patch4Byte(0x1C, value)
end

function EquipParamWeapon:sellValue(value)
    self:patch4Byte(0x20, value)
end

function EquipParamWeapon:corretMagic(value)
    self:patchFloat(0x2C, value)
end

function EquipParamWeapon:corretFaith(value)
    self:patchFloat(0x30, value)
end

function EquipParamWeapon:physGuardCutRate(value)
    self:patchFloat(0x34, value)
end

function EquipParamWeapon:magGuardCutRate(value)
    self:patchFloat(0x38, value)
end

function EquipParamWeapon:fireGuardCutRate(value)
    self:patchFloat(0x3C, value)
end

function EquipParamWeapon:thunGuardCutRate(value)
    self:patchFloat(0x40, value)
end

function EquipParamWeapon:spEffectBehaviorId0(value)
    self:patch4Byte(0x44, value)
end

function EquipParamWeapon:spEffectBehaviorId1(value)
    self:patch4Byte(0x48, value)
end

function EquipParamWeapon:spEffectBehaviorId2(value)
    self:patch4Byte(0x4C, value)
end

function EquipParamWeapon:materialSetId(value)
    self:patch4Byte(0x5C, value)
end

function EquipParamWeapon:antiDemonDamageRate(value)
    self:patchFloat(0xA0, value)
end

function EquipParamWeapon:antUndeadDamageRate(value)
    self:patchFloat(0xA4, value)
end

function EquipParamWeapon:antHollowDamageRate(value)
    self:patchFloat(0xA8, value)
end

function EquipParamWeapon:antAbyssalDamageRate(value)
    self:patchFloat(0xAC, value)
end

function EquipParamWeapon:vagrantItemLotId(value)
    self:patch4Byte(0xB0, value)
end

function EquipParamWeapon:vagrantBonusEneDropItemLotId(value)
    self:patch4Byte(0xB4, value)
end

function EquipParamWeapon:vagrantItemEneDropItemLotId(value)
    self:patch4Byte(0xB8, value)
end

function EquipParamWeapon:durability(value)
    self:patch2Byte(0xC0, value)
end

function EquipParamWeapon:durailityMax(value)
    self:patch2Byte(0xC2, value)
end

function EquipParamWeapon:attackThrowEscape(value)
    self:patch2Byte(0xC4, value)
end

function EquipParamWeapon:parryDamageLife(value)
    self:patch2Byte(0xC6, value)
end

function EquipParamWeapon:atkBasePhysics(value)
    self:patch2Byte(0xC8, value)
end

function EquipParamWeapon:atkBaseMagic(value)
    self:patch2Byte(0xCA, value)
end

function EquipParamWeapon:atkBaseFire(value)
    self:patch2Byte(0xCC, value)
end

function EquipParamWeapon:atkBaseThunder(value)
    self:patch2Byte(0xCE, value)
end

function EquipParamWeapon:atkBaseStamina(value)
    self:patch2Byte(0xD0, value)
end

function EquipParamWeapon:saWeaponDamage(value)
    self:patch2Byte(0xD2, value)
end

function EquipParamWeapon:saDurability(value)
    self:patch2Byte(0xD4, value)
end

function EquipParamWeapon:guardAngle(value)
    self:patch2Byte(0xD6, value)
end

function EquipParamWeapon:staminaGuardDef(value)
    self:patch2Byte(0xD8, value)
end

function EquipParamWeapon:trophySGradeId(value)
    self:patch2Byte(0xDC, value)
end

function EquipParamWeapon:throwAtkRate(value)
    self:patch2Byte(0xE0, value)
end

function EquipParamWeapon:bowDistRate(value)
    self:patch2Byte(0xE2, value)
end

function EquipParamWeapon:equipModelCategory(value)
    self:patchByte(0xE4, value)
end

function EquipParamWeapon:weaponCategory(value)
    self:patchByte(0xE6, value)
end

function EquipParamWeapon:wepmotionCategory(value)
    self:patchByte(0xE7, value)
end

function EquipParamWeapon:guardmotionCategory(value)
    self:patchByte(0xE8, value)
end

function EquipParamWeapon:atkMaterial(value)
    self:patchByte(0xE9, value)
end

function EquipParamWeapon:defMaterial(value)
    self:patchByte(0xEA, value)
end

function EquipParamWeapon:defSfxMaterial(value)
    self:patchByte(0xEB, value)
end

function EquipParamWeapon:spAtkCategory(value)
    self:patch2Byte(0xEE, value)
end

function EquipParamWeapon:wepmotionOneHandId(value)
    self:patchByte(0xF0, value)
end

function EquipParamWeapon:wepmotionBothHandId(value)
    self:patchByte(0xF1, value)
end

function EquipParamWeapon:properMagic(value)
    self:patchByte(0xF4, value)
end

function EquipParamWeapon:properFaith(value)
    self:patchByte(0xF5, value)
end

function EquipParamWeapon:attackBaseParry(value)
    self:patchByte(0xF7, value)
end

function EquipParamWeapon:defenseBaseParry(value)
    self:patchByte(0xF8, value)
end

function EquipParamWeapon:guardBaseRepel(value)
    self:patchByte(0xF9, value)
end

function EquipParamWeapon:attackBaseRepel(value)
    self:patchByte(0xFA, value)
end

function EquipParamWeapon:guardCutCancelRate(value)
    self:patchByte(0xFB, value)
end

function EquipParamWeapon:guardLevel(value)
    self:patchByte(0xFC, value)
end

function EquipParamWeapon:slashGuardCutRate(value)
    self:patchByte(0xFD, value)
end

function EquipParamWeapon:blowGuardCutRate(value)
    self:patchByte(0xFE, value)
end

function EquipParamWeapon:thrustGuardCutRate(value)
    self:patchByte(0xFF, value)
end

function EquipParamWeapon:poisonGuardResist(value)
    self:patchByte(0x100, value)
end

function EquipParamWeapon:toxicGuardResist(value)
    self:patchByte(0x101, value)
end

function EquipParamWeapon:bloodGuardResist(value)
    self:patchByte(0x102, value)
end

function EquipParamWeapon:curseGuardResist(value)
    self:patchByte(0x103, value)
end

function EquipParamWeapon:isDurabilityDivergence(value)
    self:patchByte(0x104, value)
end

function EquipParamWeapon:rightHandEquipable(value)
    self:patchBinary(0x105, value, 0)
end

function EquipParamWeapon:leftHandEquipable(value)
    self:patchBinary(0x105, value, 1)
end

function EquipParamWeapon:bothHandEquipable(value)
    self:patchBinary(0x105, value, 2)
end

function EquipParamWeapon:arrowSlotEquipable(value)
    self:patchBinary(0x105, value, 3)
end

function EquipParamWeapon:boltSlotEquipable(value)
    self:patchBinary(0x105, value, 4)
end

function EquipParamWeapon:enableGuard(value)
    self:patchBinary(0x105, value, 5)
end

function EquipParamWeapon:enableParry(value)
    self:patchBinary(0x105, value, 6)
end

function EquipParamWeapon:enableMagic(value)
    self:patchBinary(0x105, value, 7)
end

function EquipParamWeapon:enablePyromancy(value)
    self:patchBinary(0x106, value, 0)
end

function EquipParamWeapon:enableMiracle(value)
    self:patchBinary(0x106, value, 1)
end

function EquipParamWeapon:enableVowMagic(value)
    self:patchBinary(0x106, value, 2)
end

function EquipParamWeapon:isNormalAttackType(value)
    self:patchBinary(0x106, value, 3)
end

function EquipParamWeapon:isBlowAttackType(value)
    self:patchBinary(0x106, value, 4)
end

function EquipParamWeapon:isSlashAttackType(value)
    self:patchBinary(0x106, value, 5)
end

function EquipParamWeapon:isThrustAttackType(value)
    self:patchBinary(0x106, value, 6)
end

function EquipParamWeapon:isEnhance(value)
    self:patchBinary(0x106, value, 7)
end

function EquipParamWeapon:disableBaseChangeReset(value)
    self:patchBinary(0x107, value, 2)
end

function EquipParamWeapon:disableRepair(value)
    self:patchBinary(0x107, value, 3)
end

function EquipParamWeapon:isDarkHand(value)
    self:patchBinary(0x107, value, 4)
end

function EquipParamWeapon:ubyteLanternWep(value)
    self:patchBinary(0x107, value, 6)
end

function EquipParamWeapon:baseChangeCategory(value)
    self:patchByte(0x108, value)
end

function EquipParamWeapon:isDragonSlayer(value)
    self:patchBinary(0x108, value, 6)
end

function EquipParamWeapon:disableMultiDropShare(value)
    self:patchBinary(0x109, value, 0)
end

function EquipParamWeapon:IsDiscard(value)
    self:patchBinary(0x109, value, 1)
end

function EquipParamWeapon:Group0_AtkVfxId(value)
    self:patch4Byte(0x110, value)
end

function EquipParamWeapon:Group0_DummyPolyId0(value)
    self:patch4Byte(0x114, value)
end

function EquipParamWeapon:Group0_DummyPolyId1(value)
    self:patch4Byte(0x118, value)
end

function EquipParamWeapon:Group1_AtkVfxId(value)
    self:patch4Byte(0x11C, value)
end

function EquipParamWeapon:Group1_DummyPolyId0(value)
    self:patch4Byte(0x120, value)
end

function EquipParamWeapon:Group1_DummyPolyId1(value)
    self:patch4Byte(0x124, value)
end

function EquipParamWeapon:Group2_AtkVfxId(value)
    self:patch4Byte(0x128, value)
end

function EquipParamWeapon:Group2_DummyPolyId0(value)
    self:patch4Byte(0x12C, value)
end

function EquipParamWeapon:Group2_DummyPolyId1(value)
    self:patch4Byte(0x130, value)
end

function EquipParamWeapon:Group3_AtkVfxId(value)
    self:patch4Byte(0x134, value)
end

function EquipParamWeapon:Group3_DummyPolyId0(value)
    self:patch4Byte(0x138, value)
end

function EquipParamWeapon:Group3_DummyPolyId1(value)
    self:patch4Byte(0x13C, value)
end

function EquipParamWeapon:Group4_AtkVfxId(value)
    self:patch4Byte(0x140, value)
end

function EquipParamWeapon:Group4_DummyPolyId0(value)
    self:patch4Byte(0x144, value)
end

function EquipParamWeapon:Group4_DummyPolyId1(value)
    self:patch4Byte(0x148, value)
end

function EquipParamWeapon:Group5_AtkVfxId(value)
    self:patch4Byte(0x14C, value)
end

function EquipParamWeapon:Group5_DummyPolyId0(value)
    self:patch4Byte(0x150, value)
end

function EquipParamWeapon:Group5_DummyPolyId1(value)
    self:patch4Byte(0x154, value)
end

function EquipParamWeapon:Group6_AtkVfxId(value)
    self:patch4Byte(0x158, value)
end

function EquipParamWeapon:Group6_DummyPolyId0(value)
    self:patch4Byte(0x15C, value)
end

function EquipParamWeapon:Group6_DummyPolyId1(value)
    self:patch4Byte(0x160, value)
end

function EquipParamWeapon:Group7_AtkVfxId(value)
    self:patch4Byte(0x164, value)
end

function EquipParamWeapon:Group7_DummyPolyId0(value)
    self:patch4Byte(0x168, value)
end

function EquipParamWeapon:Group7_DummyPolyId1(value)
    self:patch4Byte(0x16C, value)
end

function EquipParamWeapon:materialVal0(value)
    self:patch2Byte(0x170, value)
end

function EquipParamWeapon:materialVal1(value)
    self:patch2Byte(0x172, value)
end

function EquipParamWeapon:darkGuardCutRate(value)
    self:patchFloat(0x188, value)
end

function EquipParamWeapon:atkBaseDark(value)
    self:patch2Byte(0x18C, value)
end

function EquipParamWeapon:AtkThrowEscapeA(value)
    self:patchByte(0x18F, value)
end

function EquipParamWeapon:swordArt_ActId(value)
    self:patch4Byte(0x190, value)
end

function EquipParamWeapon:AtkThrowEscapeB(value)
    self:patchByte(0x194, value)
end

function EquipParamWeapon:reinforceWeaponId(value)
    self:patch4Byte(0x1A0, value)
end

function EquipParamWeapon:displayTypeId(value)
    self:patch2Byte(0x1A6, value)
end

function EquipParamWeapon:CalcCorrectVal0(value)
    self:patchFloat(0x1A8, value)
end

function EquipParamWeapon:CalcCorrectVal1(value)
    self:patchFloat(0x1AC, value)
end

function EquipParamWeapon:CalcCorrectVal2(value)
    self:patchFloat(0x1B0, value)
end

function EquipParamWeapon:CalcCorrectVal3(value)
    self:patchFloat(0x1B4, value)
end

function EquipParamWeapon:CalcCorrectVal4(value)
    self:patchFloat(0x1B8, value)
end

function EquipParamWeapon:CalcCorrectVal5(value)
    self:patchFloat(0x1BC, value)
end

function EquipParamWeapon:CalcCorrectVal6(value)
    self:patchFloat(0x1C0, value)
end

function EquipParamWeapon:CalcCorrectVal7(value)
    self:patchFloat(0x1C4, value)
end

function EquipParamWeapon:CalcCorrectVal8(value)
    self:patchFloat(0x1C8, value)
end

function EquipParamWeapon:CalcCorrectVal9(value)
    self:patchFloat(0x1CC, value)
end

function EquipParamWeapon:CalcCorrectVal10(value)
    self:patchFloat(0x1D0, value)
end

function EquipParamWeapon:weaponVfx0(value)
    self:patch4Byte(0x1D4, value)
end

function EquipParamWeapon:weaponVfx1(value)
    self:patch4Byte(0x1D8, value)
end

function EquipParamWeapon:weaponVfx2(value)
    self:patch4Byte(0x1DC, value)
end

function EquipParamWeapon:weaponVfx3(value)
    self:patch4Byte(0x1E0, value)
end

function EquipParamWeapon:weaponVfx4(value)
    self:patch4Byte(0x1E4, value)
end

function EquipParamWeapon:weaponVfx5(value)
    self:patch4Byte(0x1E8, value)
end

function EquipParamWeapon:weaponVfx6(value)
    self:patch4Byte(0x1EC, value)
end

function EquipParamWeapon:weaponVfx7(value)
    self:patch4Byte(0x1F0, value)
end

function EquipParamWeapon:StaminaConsumeRate(value)
    self:patchFloat(0x1F4, value)
end

function EquipParamWeapon:attackElementCorrectId(value)
    self:patch4Byte(0x22C, value)
end

function EquipParamWeapon:MaxNum(value)
    self:patchByte(0x235, value)
end

function EquipParamWeapon:WepSpMask0(value)
    self:patchBinary(0x236, value, 0)
end

function EquipParamWeapon:WepSpMask1(value)
    self:patchBinary(0x236, value, 1)
end

function EquipParamWeapon:WepSpMask2(value)
    self:patchBinary(0x236, value, 2)
end

function EquipParamWeapon:WepSpMask3(value)
    self:patchBinary(0x236, value, 3)
end

function EquipParamWeapon:WepSpMask4(value)
    self:patchBinary(0x236, value, 4)
end

function EquipParamWeapon:WepSpMask5(value)
    self:patchBinary(0x236, value, 5)
end

function EquipParamWeapon:WepSpMask6(value)
    self:patchBinary(0x236, value, 6)
end

function EquipParamWeapon:WepSpMask7(value)
    self:patchBinary(0x236, value, 7)
end


--[[END EquipParamWeapon class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

